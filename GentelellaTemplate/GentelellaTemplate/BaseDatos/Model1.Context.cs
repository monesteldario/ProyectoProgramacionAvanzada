//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GentelellaTemplate.BaseDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WorknetEntities : DbContext
    {
        public WorknetEntities()
            : base("name=WorknetEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BITACORA> BITACORA { get; set; }
        public virtual DbSet<CANDIDATOS> CANDIDATOS { get; set; }
        public virtual DbSet<CATEGORIAS> CATEGORIAS { get; set; }
        public virtual DbSet<EMPLEOS> EMPLEOS { get; set; }
        public virtual DbSet<RECLUTADORES> RECLUTADORES { get; set; }
        public virtual DbSet<ROLES> ROLES { get; set; }
        public virtual DbSet<SOLICITUDES> SOLICITUDES { get; set; }
        public virtual DbSet<USUARIOS> USUARIOS { get; set; }
    
        public virtual int SP_Actualizar_Candidato(string pNombre, string pApellido, Nullable<int> pExp, string pGradoEstudio, Nullable<int> pTelefono, Nullable<int> pAreaInteres, string pCorreo)
        {
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pApellidoParameter = pApellido != null ?
                new ObjectParameter("pApellido", pApellido) :
                new ObjectParameter("pApellido", typeof(string));
    
            var pExpParameter = pExp.HasValue ?
                new ObjectParameter("pExp", pExp) :
                new ObjectParameter("pExp", typeof(int));
    
            var pGradoEstudioParameter = pGradoEstudio != null ?
                new ObjectParameter("pGradoEstudio", pGradoEstudio) :
                new ObjectParameter("pGradoEstudio", typeof(string));
    
            var pTelefonoParameter = pTelefono.HasValue ?
                new ObjectParameter("pTelefono", pTelefono) :
                new ObjectParameter("pTelefono", typeof(int));
    
            var pAreaInteresParameter = pAreaInteres.HasValue ?
                new ObjectParameter("pAreaInteres", pAreaInteres) :
                new ObjectParameter("pAreaInteres", typeof(int));
    
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Actualizar_Candidato", pNombreParameter, pApellidoParameter, pExpParameter, pGradoEstudioParameter, pTelefonoParameter, pAreaInteresParameter, pCorreoParameter);
        }
    
        public virtual int SP_Actualizar_Empleo(string pEmpleo, string pCompania, string pRequisitos, string pDescripcion, Nullable<int> pExperiencia, string pEstudios, string pEstado, Nullable<int> pCategoria, Nullable<int> pIdPuesto)
        {
            var pEmpleoParameter = pEmpleo != null ?
                new ObjectParameter("pEmpleo", pEmpleo) :
                new ObjectParameter("pEmpleo", typeof(string));
    
            var pCompaniaParameter = pCompania != null ?
                new ObjectParameter("pCompania", pCompania) :
                new ObjectParameter("pCompania", typeof(string));
    
            var pRequisitosParameter = pRequisitos != null ?
                new ObjectParameter("pRequisitos", pRequisitos) :
                new ObjectParameter("pRequisitos", typeof(string));
    
            var pDescripcionParameter = pDescripcion != null ?
                new ObjectParameter("pDescripcion", pDescripcion) :
                new ObjectParameter("pDescripcion", typeof(string));
    
            var pExperienciaParameter = pExperiencia.HasValue ?
                new ObjectParameter("pExperiencia", pExperiencia) :
                new ObjectParameter("pExperiencia", typeof(int));
    
            var pEstudiosParameter = pEstudios != null ?
                new ObjectParameter("pEstudios", pEstudios) :
                new ObjectParameter("pEstudios", typeof(string));
    
            var pEstadoParameter = pEstado != null ?
                new ObjectParameter("pEstado", pEstado) :
                new ObjectParameter("pEstado", typeof(string));
    
            var pCategoriaParameter = pCategoria.HasValue ?
                new ObjectParameter("pCategoria", pCategoria) :
                new ObjectParameter("pCategoria", typeof(int));
    
            var pIdPuestoParameter = pIdPuesto.HasValue ?
                new ObjectParameter("pIdPuesto", pIdPuesto) :
                new ObjectParameter("pIdPuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Actualizar_Empleo", pEmpleoParameter, pCompaniaParameter, pRequisitosParameter, pDescripcionParameter, pExperienciaParameter, pEstudiosParameter, pEstadoParameter, pCategoriaParameter, pIdPuestoParameter);
        }
    
        public virtual int SP_Actualizar_Reclutador(string pNombre, string pApellido, string pCompania, Nullable<int> pTelefono, string pCorreo)
        {
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pApellidoParameter = pApellido != null ?
                new ObjectParameter("pApellido", pApellido) :
                new ObjectParameter("pApellido", typeof(string));
    
            var pCompaniaParameter = pCompania != null ?
                new ObjectParameter("pCompania", pCompania) :
                new ObjectParameter("pCompania", typeof(string));
    
            var pTelefonoParameter = pTelefono.HasValue ?
                new ObjectParameter("pTelefono", pTelefono) :
                new ObjectParameter("pTelefono", typeof(int));
    
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Actualizar_Reclutador", pNombreParameter, pApellidoParameter, pCompaniaParameter, pTelefonoParameter, pCorreoParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_Usuario_Result> SP_Buscar_Usuario(string pCorreo, string pContrasena)
        {
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            var pContrasenaParameter = pContrasena != null ?
                new ObjectParameter("pContrasena", pContrasena) :
                new ObjectParameter("pContrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_Usuario_Result>("SP_Buscar_Usuario", pCorreoParameter, pContrasenaParameter);
        }
    
        public virtual ObjectResult<SP_Consultar_Candidato_Result> SP_Consultar_Candidato(string pCorreo)
        {
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Consultar_Candidato_Result>("SP_Consultar_Candidato", pCorreoParameter);
        }
    
        public virtual ObjectResult<SP_Consultar_Categorias_Result> SP_Consultar_Categorias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Consultar_Categorias_Result>("SP_Consultar_Categorias");
        }
    
        public virtual ObjectResult<SP_Consultar_Empleo_Result> SP_Consultar_Empleo(Nullable<long> pIdEmpleo)
        {
            var pIdEmpleoParameter = pIdEmpleo.HasValue ?
                new ObjectParameter("pIdEmpleo", pIdEmpleo) :
                new ObjectParameter("pIdEmpleo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Consultar_Empleo_Result>("SP_Consultar_Empleo", pIdEmpleoParameter);
        }
    
        public virtual ObjectResult<SP_Consultar_Empleo_Aplicado_Result> SP_Consultar_Empleo_Aplicado(string pCorreo, Nullable<long> pIdEmpleo)
        {
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            var pIdEmpleoParameter = pIdEmpleo.HasValue ?
                new ObjectParameter("pIdEmpleo", pIdEmpleo) :
                new ObjectParameter("pIdEmpleo", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Consultar_Empleo_Aplicado_Result>("SP_Consultar_Empleo_Aplicado", pCorreoParameter, pIdEmpleoParameter);
        }
    
        public virtual ObjectResult<SP_Consultar_Reclutador_Result> SP_Consultar_Reclutador(string pCorreo)
        {
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Consultar_Reclutador_Result>("SP_Consultar_Reclutador", pCorreoParameter);
        }
    
        public virtual ObjectResult<SP_Consultar_Solicitudes_Result> SP_Consultar_Solicitudes(string pCorreo)
        {
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Consultar_Solicitudes_Result>("SP_Consultar_Solicitudes", pCorreoParameter);
        }
    
        public virtual ObjectResult<SP_Consultar_Solicitudes_por_id_Result> SP_Consultar_Solicitudes_por_id(Nullable<long> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Consultar_Solicitudes_por_id_Result>("SP_Consultar_Solicitudes_por_id", pidParameter);
        }
    
        public virtual ObjectResult<SP_Empleo_Inteligente_Result> SP_Empleo_Inteligente(Nullable<int> pAreaInteres, Nullable<int> pExp, string pGradoEstudio)
        {
            var pAreaInteresParameter = pAreaInteres.HasValue ?
                new ObjectParameter("pAreaInteres", pAreaInteres) :
                new ObjectParameter("pAreaInteres", typeof(int));
    
            var pExpParameter = pExp.HasValue ?
                new ObjectParameter("pExp", pExp) :
                new ObjectParameter("pExp", typeof(int));
    
            var pGradoEstudioParameter = pGradoEstudio != null ?
                new ObjectParameter("pGradoEstudio", pGradoEstudio) :
                new ObjectParameter("pGradoEstudio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Empleo_Inteligente_Result>("SP_Empleo_Inteligente", pAreaInteresParameter, pExpParameter, pGradoEstudioParameter);
        }
    
        public virtual ObjectResult<SP_Empleos_Publicados_Result> SP_Empleos_Publicados(string pCorreo)
        {
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Empleos_Publicados_Result>("SP_Empleos_Publicados", pCorreoParameter);
        }
    
        public virtual ObjectResult<SP_Filtrar_Categorias_Result> SP_Filtrar_Categorias(Nullable<int> pCategoria)
        {
            var pCategoriaParameter = pCategoria.HasValue ?
                new ObjectParameter("pCategoria", pCategoria) :
                new ObjectParameter("pCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Filtrar_Categorias_Result>("SP_Filtrar_Categorias", pCategoriaParameter);
        }
    
        public virtual int SP_Insertar_Bitacora(string pDescripcion, string pOrigen, string pCorreo_Usuario)
        {
            var pDescripcionParameter = pDescripcion != null ?
                new ObjectParameter("pDescripcion", pDescripcion) :
                new ObjectParameter("pDescripcion", typeof(string));
    
            var pOrigenParameter = pOrigen != null ?
                new ObjectParameter("pOrigen", pOrigen) :
                new ObjectParameter("pOrigen", typeof(string));
    
            var pCorreo_UsuarioParameter = pCorreo_Usuario != null ?
                new ObjectParameter("pCorreo_Usuario", pCorreo_Usuario) :
                new ObjectParameter("pCorreo_Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_Bitacora", pDescripcionParameter, pOrigenParameter, pCorreo_UsuarioParameter);
        }
    
        public virtual int SP_Insertar_Candidato(string pCorreo, string pNombre, string pApellido, Nullable<int> pExp, string pGradoEstudio, Nullable<int> pTelefono, Nullable<int> pAreaInteres)
        {
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pApellidoParameter = pApellido != null ?
                new ObjectParameter("pApellido", pApellido) :
                new ObjectParameter("pApellido", typeof(string));
    
            var pExpParameter = pExp.HasValue ?
                new ObjectParameter("pExp", pExp) :
                new ObjectParameter("pExp", typeof(int));
    
            var pGradoEstudioParameter = pGradoEstudio != null ?
                new ObjectParameter("pGradoEstudio", pGradoEstudio) :
                new ObjectParameter("pGradoEstudio", typeof(string));
    
            var pTelefonoParameter = pTelefono.HasValue ?
                new ObjectParameter("pTelefono", pTelefono) :
                new ObjectParameter("pTelefono", typeof(int));
    
            var pAreaInteresParameter = pAreaInteres.HasValue ?
                new ObjectParameter("pAreaInteres", pAreaInteres) :
                new ObjectParameter("pAreaInteres", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_Candidato", pCorreoParameter, pNombreParameter, pApellidoParameter, pExpParameter, pGradoEstudioParameter, pTelefonoParameter, pAreaInteresParameter);
        }
    
        public virtual int SP_Insertar_Empleo(string pNombreEmpleo, string pRequisitos, string pDescripcionGeneral, string pCompania, Nullable<int> pIdCategoria, string pCorreo, string pEstado, Nullable<int> pExperienciaMinima, string pGradoEstudio)
        {
            var pNombreEmpleoParameter = pNombreEmpleo != null ?
                new ObjectParameter("pNombreEmpleo", pNombreEmpleo) :
                new ObjectParameter("pNombreEmpleo", typeof(string));
    
            var pRequisitosParameter = pRequisitos != null ?
                new ObjectParameter("pRequisitos", pRequisitos) :
                new ObjectParameter("pRequisitos", typeof(string));
    
            var pDescripcionGeneralParameter = pDescripcionGeneral != null ?
                new ObjectParameter("pDescripcionGeneral", pDescripcionGeneral) :
                new ObjectParameter("pDescripcionGeneral", typeof(string));
    
            var pCompaniaParameter = pCompania != null ?
                new ObjectParameter("pCompania", pCompania) :
                new ObjectParameter("pCompania", typeof(string));
    
            var pIdCategoriaParameter = pIdCategoria.HasValue ?
                new ObjectParameter("pIdCategoria", pIdCategoria) :
                new ObjectParameter("pIdCategoria", typeof(int));
    
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            var pEstadoParameter = pEstado != null ?
                new ObjectParameter("pEstado", pEstado) :
                new ObjectParameter("pEstado", typeof(string));
    
            var pExperienciaMinimaParameter = pExperienciaMinima.HasValue ?
                new ObjectParameter("pExperienciaMinima", pExperienciaMinima) :
                new ObjectParameter("pExperienciaMinima", typeof(int));
    
            var pGradoEstudioParameter = pGradoEstudio != null ?
                new ObjectParameter("pGradoEstudio", pGradoEstudio) :
                new ObjectParameter("pGradoEstudio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_Empleo", pNombreEmpleoParameter, pRequisitosParameter, pDescripcionGeneralParameter, pCompaniaParameter, pIdCategoriaParameter, pCorreoParameter, pEstadoParameter, pExperienciaMinimaParameter, pGradoEstudioParameter);
        }
    
        public virtual int SP_Insertar_Reclutador(string pCorreo, string pNombre, string pApellido, string pCompania, Nullable<int> pTelefono)
        {
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            var pNombreParameter = pNombre != null ?
                new ObjectParameter("pNombre", pNombre) :
                new ObjectParameter("pNombre", typeof(string));
    
            var pApellidoParameter = pApellido != null ?
                new ObjectParameter("pApellido", pApellido) :
                new ObjectParameter("pApellido", typeof(string));
    
            var pCompaniaParameter = pCompania != null ?
                new ObjectParameter("pCompania", pCompania) :
                new ObjectParameter("pCompania", typeof(string));
    
            var pTelefonoParameter = pTelefono.HasValue ?
                new ObjectParameter("pTelefono", pTelefono) :
                new ObjectParameter("pTelefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_Reclutador", pCorreoParameter, pNombreParameter, pApellidoParameter, pCompaniaParameter, pTelefonoParameter);
        }
    
        public virtual int SP_Insertar_Solicitudes(string pCorreoCandidato, Nullable<int> pIdEmpleo)
        {
            var pCorreoCandidatoParameter = pCorreoCandidato != null ?
                new ObjectParameter("pCorreoCandidato", pCorreoCandidato) :
                new ObjectParameter("pCorreoCandidato", typeof(string));
    
            var pIdEmpleoParameter = pIdEmpleo.HasValue ?
                new ObjectParameter("pIdEmpleo", pIdEmpleo) :
                new ObjectParameter("pIdEmpleo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_Solicitudes", pCorreoCandidatoParameter, pIdEmpleoParameter);
        }
    
        public virtual int SP_Insertar_Usuario(string pCorreo, string pPassword, Nullable<int> pIdRol)
        {
            var pCorreoParameter = pCorreo != null ?
                new ObjectParameter("pCorreo", pCorreo) :
                new ObjectParameter("pCorreo", typeof(string));
    
            var pPasswordParameter = pPassword != null ?
                new ObjectParameter("pPassword", pPassword) :
                new ObjectParameter("pPassword", typeof(string));
    
            var pIdRolParameter = pIdRol.HasValue ?
                new ObjectParameter("pIdRol", pIdRol) :
                new ObjectParameter("pIdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insertar_Usuario", pCorreoParameter, pPasswordParameter, pIdRolParameter);
        }
    
        public virtual ObjectResult<SP_Llenar_Candidatos_Result> SP_Llenar_Candidatos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Llenar_Candidatos_Result>("SP_Llenar_Candidatos");
        }
    
        public virtual ObjectResult<SP_Llenar_Empleos_Result> SP_Llenar_Empleos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Llenar_Empleos_Result>("SP_Llenar_Empleos");
        }
    
        public virtual ObjectResult<SP_Ver_Solicitudes_Result> SP_Ver_Solicitudes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Ver_Solicitudes_Result>("SP_Ver_Solicitudes");
        }
    }
}
